{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["checkList","type","text","id","value","content","name","CheckBox","Form","Check","className","label","CheckBoxGroup","data","map","el","RadioGroup","useState","values","updateValues","Container","fluid","Row","Col","lg","span","offset","onChange","e","result","target","checked","Group","controlId","as","Label","column","Control","Object","reduce","acc","val","Number","toFixed","rows","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PASMA,G,YAAY,CAChB,CACEC,KAAM,WACNC,KAAM,wMACNC,GAAI,YACJC,MAAO,IAET,CACEH,KAAM,WACNC,KAAM,kMACNC,GAAI,SACJC,MAAO,IAET,CACEH,KAAM,iBACNC,KAAM,+FACNG,QAAS,CACP,CACEJ,KAAM,WACNC,KAAM,0KACNC,GAAI,eACJC,MAAO,IAET,CACEH,KAAM,WACNC,KAAM,+IACNC,GAAI,qBACJC,MAAO,IAET,CACEH,KAAM,WACNC,KAAM,+IACNC,GAAI,sBACJC,MAAO,MAIb,CACEH,KAAM,iBACNC,KAAM,iEACNG,QAAS,CACP,CACEJ,KAAM,WACNC,KAAM,gEACNC,GAAI,iBACJC,MAAO,KAET,CACEH,KAAM,WACNC,KAAM,gHACNC,GAAI,kBACJC,MAAO,OAIb,CACEH,KAAM,cACNC,KAAM,kCACNI,KAAM,gBACND,QAAS,CACP,CACEJ,KAAM,QACNC,KAAM,wKACNC,GAAI,cACJC,MAAO,GAET,CACEH,KAAM,QACNC,KAAM,sBACNC,GAAI,eACJC,MAAO,IAET,CACEH,KAAM,QACNC,KAAM,sBACNC,GAAI,eACJC,MAAO,MAIb,CACEH,KAAM,WACNC,KAAM,+LACNC,GAAI,YACJC,MAAO,MAILG,EAAW,SAAC,GAAD,IAAGJ,EAAH,EAAGA,GAAID,EAAP,EAAOA,KAAME,EAAb,EAAaA,MAAb,OACf,cAACI,EAAA,EAAKC,MAAN,CACEC,UAAU,WACVT,KAAK,WACLE,GAAIA,EACJG,KAAMH,EACNC,MAAOA,EACPO,MAAK,UAAKT,EAAL,aAAcE,EAAd,QAIHQ,EAAgB,SAAC,GAAD,IAAGV,EAAH,EAAGA,KAAMW,EAAT,EAASA,KAAT,OACpB,sBAAKH,UAAU,QAAf,UACE,8BAAMR,IACN,qBAAKQ,UAAU,aAAf,SAEIG,EAAKC,KAAI,SAACC,GAAD,OAAS,cAAC,EAAD,CAAsBZ,GAAIY,EAAGZ,GAAID,KAAMa,EAAGb,KAAME,MAAOW,EAAGX,OAA3CW,EAAGZ,aAMtCa,EAAa,SAAC,GAAD,IAAGd,EAAH,EAAGA,KAAMI,EAAT,EAASA,KAAMO,EAAf,EAAeA,KAAf,OACjB,sBAAKH,UAAU,QAAf,UACE,8BAAMR,IACN,qBAAKQ,UAAU,aAAf,SAEIG,EAAKC,KAAI,SAACC,GAAD,OACP,cAACP,EAAA,EAAKC,MAAN,CACER,KAAK,QACLU,MAAK,UAAKI,EAAGb,KAAR,aAAiBa,EAAGX,MAApB,KACLE,KAAMA,EACNF,MAAOW,EAAGX,MACVD,GAAIY,EAAGZ,cAQJ,aAAO,IAAD,EACYc,mBAAS,IADrB,mBACZC,EADY,KACJC,EADI,KAenB,OACE,eAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,IAAE,EAAP,SACE,wBAAQd,UAAU,SAAlB,uGAKJ,cAACY,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAA5B,SACE,yBAAShB,UAAU,UAAnB,SACE,eAACF,EAAA,EAAD,CAAMmB,SAxBK,SAACC,GACpB,IAAMC,EAAM,eAAQX,GAEE,UAAlBU,EAAEE,OAAO7B,KACX4B,EAAOD,EAAEE,OAAOxB,MAAQsB,EAAEE,OAAO1B,MAEjCyB,EAAOD,EAAEE,OAAOxB,MAAQsB,EAAEE,OAAOC,QAAUH,EAAEE,OAAO1B,MAAQ,EAG9De,EAAaU,IAeL,UACE,eAACrB,EAAA,EAAKwB,MAAN,CAAYC,UAAU,oBAAoBC,GAAIZ,IAA9C,UACE,cAACd,EAAA,EAAK2B,MAAN,CAAYC,QAAM,EAACZ,GAAI,EAAvB,8DACA,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAChB,EAAA,EAAK6B,QAAN,CAAcpC,KAAK,cAIvB,eAACO,EAAA,EAAKwB,MAAN,CAAYC,UAAU,oBAAoBC,GAAIZ,IAA9C,UACE,cAACd,EAAA,EAAK2B,MAAN,CAAYC,QAAM,EAACZ,GAAI,EAAvB,sEACA,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAChB,EAAA,EAAK6B,QAAN,CAAcpC,KAAK,cAIvB,uBAEA,eAACO,EAAA,EAAKwB,MAAN,CAAYC,UAAU,oBAAoBC,GAAIZ,IAA9C,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,4EAEG,IAFH,IAKIc,OAAOpB,OAAOA,GAAQqB,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAME,OAAOD,KAAM,GAAGE,QAAQ,GAL7E,SAUF,cAACpB,EAAA,EAAD,CAAKC,GAAI,EAAT,SAEIxB,EAAUc,KAAI,SAACC,GACb,MAAgB,aAAZA,EAAGd,KAEH,cAAC,EAAD,CAAUE,GAAIY,EAAGZ,GAAID,KAAMa,EAAGb,KAAME,MAAOW,EAAGX,QAIlC,mBAAZW,EAAGd,KAEH,cAAC,EAAD,CAAeC,KAAMa,EAAGb,KAAMW,KAAME,EAAGV,UAKzC,cAAC,EAAD,CAAYH,KAAMa,EAAGb,KAAMI,KAAMS,EAAGT,KAAMO,KAAME,EAAGV,kBAO7D,uBAEA,eAACG,EAAA,EAAKwB,MAAN,CAAYC,UAAU,oBAAoBC,GAAIZ,IAA9C,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SAAY,gLACZ,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,gCACE,gEACA,cAAChB,EAAA,EAAK6B,QAAN,CAAcH,GAAG,WAAWU,KAAM,IAClC,sEACA,cAACpC,EAAA,EAAK6B,QAAN,CAAcH,GAAG,WAAWU,KAAM,YAKxC,uBAEA,eAACpC,EAAA,EAAKwB,MAAN,CAAYC,UAAU,oBAAoBC,GAAIZ,IAA9C,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SAAY,4IACZ,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,gCACE,gEACA,cAAChB,EAAA,EAAK6B,QAAN,CAAcH,GAAG,WAAWU,KAAM,IAClC,sEACA,cAACpC,EAAA,EAAK6B,QAAN,CAAcH,GAAG,WAAWU,KAAM,YAKxC,uBAEA,eAACpC,EAAA,EAAKwB,MAAN,CAAYC,UAAU,oBAAoBC,GAAIZ,IAA9C,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SAAY,kEACZ,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAChB,EAAA,EAAK6B,QAAN,CAAcH,GAAG,WAAWU,KAAM,sBC9OrCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3f8d0bfc.chunk.js","sourcesContent":["// eslint disable \"react/prop-types\", \"no-unused-vars\"\n\nimport React, { useState } from 'react';\nimport {\n  Container, Row, Col, Form,\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst checkList = [\n  {\n    type: 'checkbox',\n    text: 'Приложение запускается с помощью npm i && npm start ',\n    id: 'app_start',\n    value: 0.1,\n  },\n  {\n    type: 'checkbox',\n    text: 'Есть README или любая другая документация',\n    id: 'readme',\n    value: 0.1,\n  },\n  {\n    type: 'checkbox_group',\n    text: 'Приложение имеет:',\n    content: [\n      {\n        type: 'checkbox',\n        text: 'форму для ввода и превью баннера',\n        id: 'app_has_form',\n        value: 0.2,\n      },\n      {\n        type: 'checkbox',\n        text: 'кнопку экспорта картинкой',\n        id: 'app_has_png-button',\n        value: 0.1,\n      },\n      {\n        type: 'checkbox',\n        text: 'кнопку экспорта разметкой',\n        id: 'app_has_json-button',\n        value: 0.1,\n      },\n    ],\n  },\n  {\n    type: 'checkbox_group',\n    text: 'Внешний вид:',\n    content: [\n      {\n        type: 'checkbox',\n        text: 'Есть дизайн',\n        id: 'app_has_design',\n        value: 0.05,\n      },\n      {\n        type: 'checkbox',\n        text: 'Удобно пользоваться',\n        id: 'app_comfortable',\n        value: 0.05,\n      },\n    ],\n  },\n  {\n    type: 'radio_group',\n    text: 'Тесты:',\n    name: 'code-coverage',\n    content: [\n      {\n        type: 'radio',\n        text: 'Отсутствуют или не запускаются',\n        id: 'test_apcent',\n        value: 0,\n      },\n      {\n        type: 'radio',\n        text: 'Test-coverage < 50%',\n        id: 'test_less_50',\n        value: 0.1,\n      },\n      {\n        type: 'radio',\n        text: 'Test-coverage > 50%',\n        id: 'test_more_50',\n        value: 0.2,\n      },\n    ],\n  },\n  {\n    type: 'checkbox',\n    text: 'Выходит за рамки ТЗ (в хорошем смысле)',\n    id: 'out_of_tt',\n    value: 0.1,\n  },\n];\n\nconst CheckBox = ({ id, text, value }) => (\n  <Form.Check\n    className=\"checkbox\"\n    type=\"checkbox\"\n    id={id}\n    name={id}\n    value={value}\n    label={`${text} (${value})`}\n  />\n);\n\nconst CheckBoxGroup = ({ text, data }) => (\n  <div className=\"group\">\n    <div>{text}</div>\n    <div className=\"group_data\">\n      {\n        data.map((el) => (<CheckBox key={el.id} id={el.id} text={el.text} value={el.value} />))\n      }\n    </div>\n  </div>\n);\n\nconst RadioGroup = ({ text, name, data }) => (\n  <div className=\"group\">\n    <div>{text}</div>\n    <div className=\"group_data\">\n      {\n        data.map((el) => (\n          <Form.Check\n            type=\"radio\"\n            label={`${el.text} (${el.value})`}\n            name={name}\n            value={el.value}\n            id={el.id}\n          />\n        ))\n      }\n    </div>\n  </div>\n);\n\nexport default () => {\n  const [values, updateValues] = useState({});\n\n  const handleChange = (e) => {\n    const result = { ...values };\n\n    if (e.target.type === 'radio') {\n      result[e.target.name] = e.target.value;\n    } else {\n      result[e.target.name] = e.target.checked ? e.target.value : 0;\n    }\n\n    updateValues(result);\n  };\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col lg>\n          <header className=\"header\">\n            Анкета стажеров\n          </header>\n        </Col>\n      </Row>\n      <Row>\n        <Col lg={{ span: 8, offset: 2 }}>\n          <section className=\"content\">\n            <Form onChange={handleChange}>\n              <Form.Group controlId=\"formBasicPassword\" as={Row}>\n                <Form.Label column lg={3}>Кандидат</Form.Label>\n                <Col lg={9}>\n                  <Form.Control type=\"text\" />\n                </Col>\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicPassword\" as={Row}>\n                <Form.Label column lg={3}>Ссылка на github</Form.Label>\n                <Col lg={9}>\n                  <Form.Control type=\"link\" />\n                </Col>\n              </Form.Group>\n\n              <hr />\n\n              <Form.Group controlId=\"formBasicPassword\" as={Row}>\n                <Col lg={3}>\n                  <h6>\n                    Чеклист\n                    {' '}\n                    (\n                    {\n                      Object.values(values).reduce((acc, val) => acc + Number(val), 0).toFixed(1)\n                    }\n                    )\n                  </h6>\n                </Col>\n                <Col lg={9}>\n                  {\n                    checkList.map((el) => {\n                      if (el.type === 'checkbox') {\n                        return (\n                          <CheckBox id={el.id} text={el.text} value={el.value} />\n                        );\n                      }\n\n                      if (el.type === 'checkbox_group') {\n                        return (\n                          <CheckBoxGroup text={el.text} data={el.content} />\n                        );\n                      }\n\n                      return (\n                        <RadioGroup text={el.text} name={el.name} data={el.content} />\n                      );\n                    })\n                  }\n                </Col>\n              </Form.Group>\n\n              <hr />\n\n              <Form.Group controlId=\"formBasicPassword\" as={Row}>\n                <Col lg={3}><h6>Комментария по приложению</h6></Col>\n                <Col lg={9}>\n                  <div>\n                    <h6>Плюсы</h6>\n                    <Form.Control as=\"textarea\" rows={3} />\n                    <h6>Минусы</h6>\n                    <Form.Control as=\"textarea\" rows={3} />\n                  </div>\n                </Col>\n              </Form.Group>\n\n              <hr />\n\n              <Form.Group controlId=\"formBasicPassword\" as={Row}>\n                <Col lg={3}><h6>Комментария по коду</h6></Col>\n                <Col lg={9}>\n                  <div>\n                    <h6>Плюсы</h6>\n                    <Form.Control as=\"textarea\" rows={3} />\n                    <h6>Минусы</h6>\n                    <Form.Control as=\"textarea\" rows={3} />\n                  </div>\n                </Col>\n              </Form.Group>\n\n              <hr />\n\n              <Form.Group controlId=\"formBasicPassword\" as={Row}>\n                <Col lg={3}><h6>Итого</h6></Col>\n                <Col lg={9}>\n                  <Form.Control as=\"textarea\" rows={3} />\n                </Col>\n              </Form.Group>\n            </Form>\n          </section>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}